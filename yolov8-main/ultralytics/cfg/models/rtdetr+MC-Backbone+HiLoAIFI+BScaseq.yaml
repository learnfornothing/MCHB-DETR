# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# RT-DETR-ResNet50 object detection model with P3-P5 outputs.

# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n-cls.yaml' will call yolov8-cls.yaml with scale 'n'
  # [depth, width, max_channels]
  s: [0.33 , 0.50, 1024]

backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [32, 1, 1]] # 0
  - [-1, 1, Conv, [32, 3, 2]]  # 320x320
  - [-1, 1, Conv, [64, 1, 1]]
  - [-1, 1, CAADown, [64]]
  - [-1, 1, MELAN, [128, 2, False]] # 4 160x160
  - [-1, 1, ADown, [128]]
  - [-1, 1, MELAN, [256, 2, False]] # 6 80x80 S3
  - [-1, 1, ADown, [256]]
  - [-1, 1, MELAN, [512, 2, False]] # 8 40x40 S4
  - [-1, 1, ADown, [512]]
  - [-1, 1, MELAN, [1024, 2, False]] # 10 20x20 S5

head:
  - [-1, 1, Conv, [256, 1, 1, None, 1, 1, False]] # 11
  - [-1, 1, HiLoAIFI, [1024, 8]]
  - [-1, 1, Conv, [256, 1, 1]] # 13 20x20

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 40x40
  - [8, 1, Conv, [256, 1, 1, None, 1, 1, False]] # 15
  - [[-2, -1], 1, Concat, [1]]
  - [-1, 3, RepC3, [256]] # 17
  - [-1, 1, Conv, [256, 1, 1]] # 18

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 80x80
  - [6, 1, Conv, [256, 1, 1, None, 1, 1, False]] # 20
  - [[-2, -1], 1, Concat, [1]] # cat backbone P4
  - [-1, 3, RepC3, [256]] # X3 (22), fpn_blocks.1

  - [-1, 1, Conv, [256, 3, 2]] # 23, downsample_convs.0 # 40x40
  - [[-1, 18], 1, Concat, [1]] # cat Y4
  - [-1, 3, RepC3, [256]] # F4 (25), pan_blocks.0

  - [-1, 1, Conv, [256, 3, 2]] # 26, downsample_convs.1  # 20x20
  - [[-1, 13], 1, Concat, [1]] # cat Y5
  - [-1, 3, RepC3, [256]] # F5 (28), pan_blocks.1

  - [[20, 15, 11], 1, BScaleseqfeafus, [256]]
  - [[22, -1], 1, Add, []] # 30 80x80

  - [[30, 25, 28], 1, RTDETRDecoder, [nc]] # Detect(P3, P4, P5)
